<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven />

    <context:component-scan base-package="edu.machine.repair.security edu.machine.repair.db"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/machine_repair" />
        <property name="username" value="postgres" />
        <property name="password" value="postgres" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="edu.machine.repair.db.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <security:global-method-security secured-annotations="enabled" />

    <security:http auto-config="true" use-expressions="false">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/pages/admin/**" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/pages/manager/**" access="ROLE_MANAGER, ROLE_ADMIN" />
        <security:intercept-url pattern="/pages/**" access="ROLE_CLIENT" />
        <security:form-login
                login-processing-url="/j_spring_security_check"
                login-page="/"
                authentication-success-handler-ref="urlAuthenticationSuccessHandler"
                authentication-failure-url="/?login_error=true"
                username-parameter="login"
                password-parameter="password"/>
        <security:logout invalidate-session="true" logout-url="/j_spring_security_logout"/>
        <security:session-management>
            <security:concurrency-control max-sessions="1"/>
        </security:session-management>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="SELECT login, password, enabled FROM users WHERE login = ?"
                    authorities-by-username-query="SELECT u.login, r.name
                                                   FROM users u
                                                   INNER JOIN users_roles ur ON u.id = ur.user_id
                                                   INNER JOIN roles r ON r.id = ur.role_id
                                                   WHERE u.login = ?" />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>